# -*- coding: utf-8 -*-
"""HIT3Aggregation.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/github/tiffanytsang/pickture-perfect/blob/master/src/HIT3Aggregation.ipynb
"""

import pandas as pd

data = pd.read_csv('hit3dummy.csv')

# returns a list 
def find_unqualified(df):
  unqualified = set()
  for row in df.iterrows():
    row = row[1]
    neg1 = row["NegImg1"]
    neg2 = row["NegImg2"]
    worker = row["WorkerID"]
    for i in range(1,8):
      rank = row["Rank" + str(i)]
      if rank == neg1 or rank == neg2:
        unqualified.add(row["WorkerID"])
  return unqualified

# returns a list of image IDs/URLs sorted based on 
# average ranking amongst all qualified workers
def get_ranked_images(df, unqual):
  pictures = {}
  for row in data.iterrows():
    row = row[1]
    if row['WorkerID'] not in unqual:
      for i in range(1, 11):
        url = int(row['Rank' + str(i)])
        if url not in pictures:
          pictures[url] = [i, 1] # sum, count
        else:
          pictures[url][0] += i
          pictures[url][1] += 1
  for (url, v) in pictures.items():
    pictures[url] = v[0] / v[1]
  return sorted(pictures, key=pictures.get)

get_ranked_images(data, find_unqualified(data))[0]

